@startuml seq-dev

skinparam responseMessageBelowArrow true

mainframe Pattern: Development - New Feature Enhancement or Bug Fix

legend top left
Motivation: 
To ensure central working copy of the latest stable development branch 
is always available (herein known as <develop-branch>)

TBD: Numbering / Stereotypes / Sub-Process
end legend

actor Developer as DEV
actor AnotherDeveloper as ANDEV

box Local (Developer's PC) #LightYellow
    participant GitLocalCodeRepo as GLCR
	participant LocalTestEnvironment as LTE
end box

box Central (Source Code and Test Environment) #LightGray
	participant GitCentralCodeRepo as GC
	participant CentralTestEnvironment as CTE
end box

autonumber 1

== SET-UP FOR UNDERTAKING NEW FEATURE/BUG WORK ==
DEV -> GLCR: PULL <develop-branch> branch (including UNIT-TESTS)
GLCR -> GC: PULL <develop-branch>

DEV -> LTE: RUN UNIT-TESTS to validate <develop-branch>
	note right
	ALERT ScrumMaster ON FAILURE
	end note

DEV -> GLCR: CREATE-BRANCH <feature-branch> locally
	note right
	Keep new work isolated from central and local <develop-branch> 
	at all times. This will finally be resolved centrally, not locally.
	end note

== WORK IN PROGRESS ==
loop while work uncompleted and/or RUN UNIT-TEST failing
	autonumber 5.0
	
	group <<sub-process>> [MERGE-MOST-RECENT-DEVELOP-BRANCH]
		DEV -> GLCR: PULL <develop-branch> from central
		GLCR ->  GC: PULL <develop-branch>
		DEV -> GLCR: MERGE <develop-branch> => <feature-branch>
		alt while merge conflict <develop-branch> vs <feature-branch>
			DEV -> GLCR: fix merge conflicts and COMMIT <feature-branch>
			DEV -> GLCR: re-test by MERGE <develop-branch> => <feature-branch>
		end
	end

	DEV -> GLCR: <<at regular intervals>> do subprocess MERGE-MOST-RECENT-DEVELOP-BRANCH
	note right
		undertaken at *regular intervals* to reduce merge conflicts on final commit 
		of local work.
	end note

	alt feature
		DEV -> GLCR: update local unit tests (tdd-style) to cater for new function(s)
		DEV -> LTE: RUN UNIT-TEST spinning up local test environment (fails new test)
		DEV -> GLCR: Developer implements new functionality
		DEV -> LTE: RUN UNIT-TEST spinning up local test environment (until new test passes)

	else bug
		DEV -> GLCR: Developer writes a new test to isolate bug (tdd-style)
		DEV -> LTE: RUN UNIT-TEST local test environment (test fails)
		DEV -> GLCR: Developer fixes bug
		DEV -> LTE: RUN UNIT-TEST spinning up local test environment (until new test passes)
	end

	DEV -> GLCR: <<sub-process>> MERGE-MOST-RECENT-DEVELOP-BRANCH (final time)
	autonumber 5.3

	note over DEV, ANDEV
		NB: 
		For all work undertake as part of this *loop* 
		COMMIT locally to <feature-branch>
	end note
end

== CODE QUALITY AND CENTRAL TEST ==
autonumber 6
DEV -> GLCR: PUSH <feature-branch>
GLCR  -> GC: PUSH <feature-branch>
GC  -> GC: 'request to accept updated code' created (ideally automated)
CTE -> CTE: RUN UNIT-TEST test suite to validate changes (ideally automated)

note over DEV, ANDEV
... later
end note

ANDEV -> CTE: CODE-REVIEW to validate changes

alt pass review and full test suite
	autonumber 11.1
	ANDEV -> GC: update accepted into <develop-branch>
else fail
	autonumber 11.2
	GC -> GC: update rejected (back to: loop)
end

== CLEAN-UP ==
DEV -> GLCR: DELETE <feature-branch> local
DEV -> GC: DELETE <feature-branch> central

@enduml
